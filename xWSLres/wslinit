#!/bin/bash
# First, disable services unsafe for WSL
update-rc.d apport disable >/dev/null 2>&1
update-rc.d lvm2-lvmpolld disable >/dev/null 2>&1
update-rc.d lvm2-lvmetad disable >/dev/null 2>&1
update-rc.d lxcfs disable >/dev/null 2>&1
update-rc.d lxd disable >/dev/null 2>&1
update-rc.d open-vm-tools disable >/dev/null 2>&1
update-rc.d apport disable >/dev/null 2>&1
update-rc.d acpid disable >/dev/null 2>&1
update-rc.d rsyslog disable >/dev/null 2>&1
update-rc.d open-iscsi disable >/dev/null 2>&1
update-rc.d iscsid disable >/dev/null 2>&1
update-rc.d plymouth disable >/dev/null 2>&1
update-rc.d plymouth disable >/dev/null 2>&1
update-rc.d mdadm disable >/dev/null 2>&1
update-rc.d cryptdisks disable >/dev/null 2>&1
update-rc.d cryptdisks-early disable >/dev/null 2>&1
update-rc.d irqbalance disable >/dev/null 2>&1
update-rc.d unattended-upgrades disable >/dev/null 2>&1

[[ -z $1 ]] && { echo "Need to specify a run level"; exit 127; }
run_level=$1
[[ -d /etc/rc${run_level}.d/ ]] ||  { echo "Need to specify a run level"; exit 127; }
for rc_service in /etc/rc${run_level}.d/K*; do
        [[ -e "$rc_service" ]] && $rc_service stop
done
for rc_service in /etc/rc${run_level}.d/S*; do
        [[ -e "$rc_service" ]] && $rc_service start
done

read -p "$*"
